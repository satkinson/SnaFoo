@{
    //ViewBag.Title = "Home Page";
}
<div class="content" role="main">
    <div class="shelf shelf_5">
        <h1 class="hdg hdg_1">Voting</h1>
    </div>
    <div class="shelf shelf_2">
        <p>You are able to vote for up to three selections each month.</p>
    </div>
    <div class="shelf shelf_2">
        <div class="voteBox">
            <div class="voteBox-hd">
                <h2 class="hdg hdg_3">Votes Remaining</h2>
            </div>
            <div class="voteBox-body">
                <p class="counter" data-bind="
                        text:numOfVotes,
                        css:{
                            counter_green: numOfVotes() == 3, 
                            counter_yellow:numOfVotes()==2, 
                            counter_red:numOfVotes()==1,
                            isHidden:numOfVotes()==0
                        }">3</p>
            </div>
        </div>
    </div>
    <div class="shelf shelf_2">
        <p class="error" data-bind="css:{isHidden:numOfVotes()>0}">Opps! You have already voted the total allowed times this month.<br />Come back next month to vote again!</p>
    </div>
    <div class="split">
        <div class="shelf shelf_2">
            <div class="shelf">
                <h2 class="hdg hdg_2 mix-hdg_centered ">Snacks Always Purchased</h2>
            </div>
            <ul class="list list_centered" data-bind="foreach: alwaysOrdered">
                <li data-bind="text: name"></li>
            </ul>
        </div>
    </div>
    <div class="split">
        <div class="shelf shelf_2">
            <div class="shelf">
                <h2 class="hdg hdg_2 mix-hdg_centered ">Snacks suggested this month</h2>
            </div>
            <div class="shelf shelf_5">
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Snack Food</th>
                            <th scope="col">Current Votes</th>
                            <th scope="col">VOTE</th>
                            <th scope="col">Last Date Purchased</th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: optionalOrdered">
                        <tr>
                            <td data-bind="text:name"></td>
                            <td data-bind="text:voteCount">0</td>
                            <td>
                                <button class="btn btn_clear" data-bind="click:$parent.vote"> <!-- add disabled when all votes used -->
                                    <i class="icon-check icon-check_voted"></i>
                                </button>
                            </td>
                            <td data-bind="text: lastPurchaseDate"></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">

        function viewModel() {

            var self = this;

            self.numOfVotes = ko.observable(3);
            self.alwaysOrdered = ko.observableArray([]);
            self.optionalOrdered = ko.observableArray([]);

            self.vote = function (snack) {
                console.log('vote for snack : ', snack);

                $.ajax({
                    url: "/api/VoteAPI",
                    type: "POST",
                    data: '"' + snack.id + '"',
                    contentType: "application/json",
                    dataType: "json",
                    success: function (data) {
                        console.log('post success : ', data);

                        var rawvotedIds = $.cookie("natVotes");
                        if (rawvotedIds === undefined) {
                            $.cookie("natVotes", snack.id , { expires: 30 });
                        }
                        else {
                            $.cookie("natVotes", rawvotedIds + "," + snack.id, { expires: 30 });
                        }

                        window.location.reload(true); //TODO : resolve reload issue with observables instead of reload
                    }
                });

            }


            $.when(

                $.getJSON("https://api-snacks.nerderylabs.com/v1/snacks?ApiKey=da39f072-4eaa-43ef-abd0-9c6c51a7cdb2"),
                $.getJSON("/api/SuggestionAPI"),
                $.getJSON("/api/VoteAPI")
            
            ).done(function (result1, result2, result3) {
            
                var snacks = result1[0];
                var suggestions = result2[0];
                var votes = result3[0];

                var rawvotedIds = $.cookie("natVotes");
                var voteIds = [];
                if (rawvotedIds && rawvotedIds.length > 0)
                {
                    voteIds = rawvotedIds.split(',');
                    self.numOfVotes(3 - voteIds.length);
                }
             
                for (var i = 0; i < snacks.length; i++) {
                    if (!snacks[i].optional) {
                        self.alwaysOrdered.push(snacks[i]);
                    }
                    else if (_.where(suggestions, { SnackId : snacks[i].id }).length > 0) { //snack has been suggested
                        // TODO : add restriction that will only add item if it is suggested for the next month (so that only items for next
                        //month can be added to the vote list.
                        
                        snacks[i].voteCount = _.where(votes, { SnackId: snacks[i].id }).length; //TODO: only count votes fr the month being displayed

                        self.optionalOrdered.push(snacks[i]);
                    }
                }

            })

        };

        ko.applyBindings(new viewModel());
    </script>
}